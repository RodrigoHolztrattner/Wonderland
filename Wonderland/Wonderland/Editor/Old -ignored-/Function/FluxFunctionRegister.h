////////////////////////////////////////////////////////////////////////////////
// Filename: FluxFunctionRegister.h
////////////////////////////////////////////////////////////////////////////////
#pragma once

//////////////
// INCLUDES //
//////////////
#include <string>
#include <vector>
#include "FluxFunction.h"

///////////////
// NAMESPACE //
///////////////

/////////////
// DEFINES //
/////////////

////////////
// GLOBAL //
////////////

////////////////////////////////////////////////////////////////////////////////
// Class name: FluxFunctionRegister
////////////////////////////////////////////////////////////////////////////////
class FluxFunctionRegister
{
/////////////
// DEFINES //
public: /////

//////////////////
// CONSTRUCTORS //
public: //////////

	// Constructor / destructor
	FluxFunctionRegister();
	~FluxFunctionRegister();

//////////////////
// MAIN METHODS //
public: //////////

	// Store a function
	static void StoreFunction(FluxFunction* _function);

	// Return a function by data
	static FluxFunction* GetFunction(std::string _functionName);

private:

	// Get a instance for this class
	static FluxFunctionRegister* GetInstance();

////////////////////
// INPUT / OUTPUT //
public: ////////////

///////////////
// VARIABLES //
protected: ////

	// Our assembly box array
	std::vector<FluxFunction*> m_FunctionStorage;
};