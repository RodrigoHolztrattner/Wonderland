////////////////////////////////////////////////////////////////////////////////
// Filename: VWModelIndex.h
////////////////////////////////////////////////////////////////////////////////
#pragma once

//////////////
// INCLUDES //
//////////////
#include <vector>

#include "..\..\..\NamespaceDefinitions.h"
#include "..\..\..\Hoard\Hoard.h"

///////////////
// NAMESPACE //
///////////////

/////////////
// DEFINES //
/////////////

////////////
// GLOBAL //
////////////

///////////////
// NAMESPACE //
///////////////

// Just another graphic wrapper
NamespaceBegin(VulkanWrapper)

////////////////
// FORWARDING //
////////////////

class VWContext;

////////////////
// STRUCTURES //
////////////////

////////////////////////////////////////////////////////////////////////////////
// Class name: VWModelIndex
////////////////////////////////////////////////////////////////////////////////
class VWModelIndex : public Hoard::Supply::Index
{
public:

//////////////////
// CONSTRUCTORS //
public: //////////

	// Constructor / destructor
	VWModelIndex();
	~VWModelIndex();

//////////////////
// MAIN METHODS //
public: //////////

	// Serialize this object
	std::vector<unsigned char> Serialize();

	// Deserialize this
	uint32_t Deserialize(std::vector<unsigned char>& _data, uint32_t _index);

///////////////
// VARIABLES //
private: //////

};

// Just another graphic wrapper
NamespaceEnd(VulkanWrapper)